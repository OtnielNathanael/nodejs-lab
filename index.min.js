const express=require("express"),bodyParser=require("body-parser"),koneksi=require("./config/database"),multer=require("multer"),path=require("path"),app=express(),port=3e3;app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!0})),app.use(express.static("./public"));var storage=multer.diskStorage({destination:(req,file,callBack)=>{callBack(null,"./public/images/")},filename:(req,file,callBack)=>{callBack(null,file.fieldname+"_"+Date.now()+path.extname(file.originalname))}}),upload=multer({storage:storage});app.get("/api/movie-specific/:id",((req,res)=>{koneksi.query("SELECT judul,rating,deskripsi FROM movies where id=?",req.params.id,((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(200).json({success:!0,data:rows})}))})),app.get("/api/movie",((req,res)=>{koneksi.query("SELECT * FROM movies",req.params.id,((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(200).json({success:!0,data:rows})}))})),app.post("/api/movies",upload.single("image"),((req,res)=>{if(req.file){console.log(req.file.filename);var imgsrc="http://localhost:3000/images/"+req.file.filename;const data={...req.body},querySql="INSERT INTO movies (judul, rating, deskripsi, sutradara, foto) VALUES (?,?,?,?,?);",judul=data.judul,rating=data.rating,deskripsi=data.deskripsi,sutradara=data.sutradara,foto=imgsrc;koneksi.query(querySql,[judul,rating,deskripsi,sutradara,foto],((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(201).json({success:!0,message:"Data berhasil ditambahkan"+data})}))}else{console.log("No File Upload");const data={...req.body},querySql="INSERT INTO movies (judul, rating, deskripsi, sutradara) VALUES (?,?,?,?)",judul=data.judul,rating=data.rating,deskripsi=data.deskripsi,sutradara=data.sutradara;koneksi.query(querySql,[judul,rating,deskripsi,sutradara],((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(201).json({success:!0,message:"Data berhasil ditambahkan"+data})}))}})),app.delete("/api/movies/:id",((req,res)=>{koneksi.query("DELETE FROM movies where id = ?",req.params.id,((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(200).json({success:!0,data:rows})}))})),app.get("/api/movies/filter/:judul",((req,res)=>{const querySql="SELECT * FROM movies where judul like '%"+req.params.judul+"%';";console.log(querySql),koneksi.query(querySql,req.params.id,((err,rows,field)=>{if(err)return res.status(500).json({message:"Ada kesalahan",error:err});res.status(200).json({success:!0,data:rows})}))})),app.listen(3e3,(()=>{console.log("Server listening at http://localhost:3000")}));